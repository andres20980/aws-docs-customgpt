name: Generate and Publish Combined Documentation

on:
  workflow_dispatch:  # Permite que el flujo de trabajo sea ejecutado manualmente
  schedule:
    - cron: '0 0 * * 0'  # Ejecuta todos los domingos a medianoche

jobs:
  generate-and-publish-doc:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'  # Asegúrate de que los submódulos se clonen también

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Generate Combined Documentation
      run: |
        # Crear un archivo de documentación combinado vacío
        echo "# AWS Documentation Combined" > combined_documentation.md
        
        # Recorrer los submódulos y extraer todo el contenido de los archivos
        for submodule in $(git submodule foreach 'echo $name'); do
          echo "## Submódulo: $submodule" >> combined_documentation.md
          
          # Recorrer todos los archivos dentro del submódulo y agregarlos al archivo combinado
          find "$submodule" -type f -exec cat {} \; >> combined_documentation.md

          echo "\n\n" >> combined_documentation.md  # Añadir salto de línea entre submódulos
        done
        
        # Verificar que el archivo combinado se haya creado correctamente
        cat combined_documentation.md

    - name: Commit and Push to gh-pages
      run: |
        # Configurar git
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Configurar git para usar el token de acceso personal (PAT)
        git config --global credential.helper 'store'
        echo "https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com" > ~/.git-credentials
        
        # Crear una nueva rama gh-pages si no existe
        git checkout -b gh-pages
        
        # Copiar el archivo combinado a la raíz de la rama
        cp combined_documentation.md ./index.md
        
        # Agregar el archivo y hacer commit
        git add index.md
        git commit -m "Update combined AWS documentation"

        # Empujar los cambios a la rama gh-pages
        git push origin gh-pages --force

    - name: Publish Documentation via GitHub Pages
      run: |
        # Establecer GitHub Pages para servir archivos desde la rama gh-pages
        echo "Publishing via GitHub Pages"
        
        # Agregar el archivo combinado a la rama gh-pages
        git push origin gh-pages

    - name: Upload Combined Documentation as Artifact
      run: |
        # Generar el nombre del archivo
        FILE="combined_documentation.md"
        
        # Comprimir el archivo combinado para la subida
        zip combined_documentation.zip $FILE
        
        # Usar curl para subir el archivo comprimido como artefacto
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -F "file=@combined_documentation.zip" \
          https://uploads.github.com/repos/${{ github.repository }}/actions/artifacts
